RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx")))
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
# Getting to the proportion of open season days by wave
P.Open.Days = Regs %>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(p_open = (sum(reg_season =="open")/length(reg_season)))
P.Open.Days$p_closed = 1-P.Open.Days$p_open
colnames(P.Open.Days) = c("YEAR","WAVE","p_open","p_closed")
# 1a - Manipulate GenRec/fed_closed Data to include Texas State waters as Always Open ####
RecCatch = RecCatch %>% mutate(new_fed_closed = ifelse((NEW_STA == "TX"& JURISDICTION=="State"),0,fed_closed)) # 0 = always open
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv")
head(check)
table(check$fed_closed,check$JURISDICTION,check$new_fed_closed) # Good to go! All texas state jur. 1's or 2's are now all 0's (all open)
# 2 - Choose Fishing Mode (CHB, HBT, PRIV) ####
Fish.Mode ="Cbt" # "Cbt"        "Hbt"        "Priv"       "Priv/Shore"
# 3 - Calculate discards for each fed season (0 - open, 1 - open/closed, 2 - closed) ####
# fed_closed = 1 - open and closed season occurs in a given wave
# Pivot discard data by wave and year to get open and closed season discards
RecCatch.cbt.fed1 = RecCatch %>% filter(NEW_MODEN==Fish.Mode,new_fed_closed==1)%>%
group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
colnames(RecCatch.cbt.fed1) = c("YEAR","Gulf","WAVE","B2")
# merge based on wave and year to get proportion of season open and closed and discards in one the table
RecCatch.cbt.fed1= merge(RecCatch.cbt.fed1,P.Open.Days, by= c("YEAR","WAVE"))
# multiply proportions of season by sum(B2)
RecCatch.cbt.fed1$Open = as.numeric(RecCatch.cbt.fed1$B2)*as.numeric(RecCatch.cbt.fed1$p_open)
RecCatch.cbt.fed1$Closed = as.numeric(RecCatch.cbt.fed1$B2)*as.numeric(RecCatch.cbt.fed1$p_closed)
RecCatch.cbt.fed1.sum = RecCatch.cbt.fed1 %>%
group_by(YEAR,Gulf)%>%
summarise(Open=sum(Open),
Closed = sum(Closed))
# fed_closed = 0 - Open season only discards (b2)
#Pivot discard data by wave and year to get open and closed season discards
RecCatch.cbt.fed0 = RecCatch %>% filter(NEW_MODEN==Fish.Mode,new_fed_closed==0)%>%
group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
colnames(RecCatch.cbt.fed0) = c("YEAR","Gulf","WAVE","B2")
head(RecCatch.cbt.fed0)
# merge based on wave and year to get proportion of season open and closed and discards in one the table
RecCatch.cbt.fed0 = merge(RecCatch.cbt.fed0,P.Open.Days, by= c("YEAR","WAVE"))
# multiply proportions of season by sum(B2)
RecCatch.cbt.fed0$Open = as.numeric(RecCatch.cbt.fed0$B2)
RecCatch.cbt.fed0.sum = RecCatch.cbt.fed0 %>%
group_by(YEAR,Gulf)%>%
summarise(Open=sum(Open))
# fed_closed = 2 - closed season
#Pivot discard data by wave and year to get open and closed season discards
RecCatch.cbt.fed2 = RecCatch %>% filter(NEW_MODEN==Fish.Mode,new_fed_closed==2)%>%
group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
colnames(RecCatch.cbt.fed2) = c("YEAR","Gulf","WAVE","B2")
head(RecCatch.cbt.fed2)
# merge based on wave and year to get proportion of season open and closed and discards in one the table
RecCatch.cbt.fed2 = merge(RecCatch.cbt.fed2,P.Open.Days, by= c("YEAR","WAVE"))
# multiply proportions of season by sum(B2)
RecCatch.cbt.fed2$Closed = as.numeric(RecCatch.cbt.fed2$B2)
RecCatch.cbt.fed2.sum = RecCatch.cbt.fed2 %>%
group_by(YEAR,Gulf)%>%
summarise(Closed=sum(Closed))
# 4 - Get total fed seasons ####
Cbt.OpenClosed = merge(RecCatch.cbt.fed2.sum, RecCatch.cbt.fed1.sum, by=c("YEAR","Gulf"), all = TRUE)
Cbt.OpenClosed = merge(Cbt.OpenClosed, RecCatch.cbt.fed0.sum, by=c("YEAR","Gulf"), all = TRUE)
Cbt.OpenClosed = Cbt.OpenClosed %>% rowwise()%>%
mutate(Open = sum(c_across(starts_with("Open")), na.rm = T),
Closed =  sum(c_across(starts_with("Closed")), na.rm = T))
# 5 - Organize and export for SS ####
Cbt = Cbt.OpenClosed %>% select(c(-Closed.x,-Closed.y,-Open.x,-Open.y))%>%
pivot_wider(
names_from = Gulf,
values_from = c(Open, Closed),values_fill = 0)
colnames(Cbt)[2:dim(Cbt)[2]] = paste0("Cbt_",colnames(Cbt)[2:dim(Cbt)[2]])
write.csv(Cbt,paste0(OutputDir,"\\Cbt_Discards.csv"),row.names = FALSE)
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
Regs = read.csv(paste0(InputDir,"\\RSN_FedPrivate_Regs_through2016.csv"))
FileName = "RS_rec_catGEN_8119_20220707"
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
source('~/GitHub/OpenClosedRecDiscards/Code/3_FedPrivate_2016_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
head(Regs)
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
# State Private Discards
# Methods:
# 1. Import season length by based on management history SS provided by SERO
# 2. Calculate number of total days per wave
# 4. Calculate the proportion of open season days per wave
# 5. Use recreational landings/discards SS (e.g., RS_rec_catGEN_8119_20211123)
# to create pivot tables of discards (b2). For 2013-2016 filter to the "state" jurisdiction
# and summarize by "NEW_STA", wave,gulf region and year.
# 6. Use proportions from 4 to partition discards by wave to either the open or closed season.
# 7. Sum discards over wave and gulf region, by open/closed season to get total discards.
# 8. Steps 5-7 are repeated for years after 2016 except in these years step 5 does not include
# the "state" jurisdiction filter because at this time the states control all waters.
# 9. Question your life decisions.
# NOTE: The above steps are completed twice, once for 2013-2016 and then for 2017 on.
# For 2017 on There is no need for a jurisdiction identifier because the states control all waters.
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# State Jurisdiction 2013-2016
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
Regs = read.csv(paste0(InputDir,"/RSN_StatePrivate_Regs_table.csv"))
Regs.help = read.csv(paste0(InputDir,"/RSN_ForHire_Regs_through2021.csv")) # needed for month length doesnt matter
FileName = "RS_rec_catGEN_8119_20220707"
load(paste0(InputDir,"/",FileName,".RData"))
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
head(StateRegs)
P.Open.Days = Regs.help%>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(length = length(reg_season))
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# State Jurisdiction 2013-2016
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
FileName = "RS_rec_catGEN_8119_20220707"
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
Regs = read.csv(paste0(InputDir,"/RSN_StatePrivate_Regs_table.csv"))
Regs.help = read.csv(paste0(InputDir,"/RSN_ForHire_Regs_through2021.csv")) # needed for month length doesnt matter
head(Regs)
table(Regs.help$year)
# Getting to the proportion of open season days by wave
StateRegs = Regs %>% select(-Annual_Open)%>% pivot_longer(cols = starts_with("Wave_"), names_to = "WAVE",names_prefix ="Wave_", values_to = "open")%>%
mutate(NEW_STA = ifelse(State=="Texas","TX",
ifelse(State=="Alabama","AL",
ifelse(State=="Mississippi","MS",
ifelse(State == "Louisiana","LA",
ifelse(State=="Florida","FLW",NA))))))
head(StateRegs)
P.Open.Days = Regs.help%>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(length = length(reg_season))
head(StateRegs)
colnames(StateRegs) = c("State" ,"year",  "wave" , "open"  ,"NEW_STA")
P.Open.State = merge(StateRegs,P.Open.Days, by = c("year","wave"))
P.Open.State$p_open = P.Open.State$open/P.Open.State$length
head(P.Open.State)
# Getting to the proportion of open season days by wave
StateRegs = Regs %>% select(-Annual_Open)%>% pivot_longer(cols = starts_with("Wave_"), names_to = "WAVE",names_prefix ="Wave_", values_to = "open")%>%
mutate(NEW_STA = ifelse(State=="Texas","TX",
ifelse(State=="Alabama","AL",
ifelse(State=="Mississippi","MS",
ifelse(State == "Louisiana","LA",
ifelse(State=="Florida","FLW",NA))))))
head(StateRegs)
P.Open.Days = Regs.help%>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(length = length(reg_season))
head(StateRegs)
colnames(StateRegs) = c("State" ,"year",  "wave" , "open"  ,"NEW_STA")
P.Open.State = merge(StateRegs,P.Open.Days, by = c("year","wave"))
head(P.Open.State)
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/Graphics.R')
StatePriv_discard = read.csv(paste0(OutputDir,"StatePriv_Discards.csv"))
# Merge state and fed by code to reduce issues
library(tidyverse)
user = Sys.getenv("USERNAME")
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
paste0(OutputDir,"StatePriv_Discards.csv")
StatePriv_discard = read.csv(paste0(OutputDir,"/StatePriv_Discards.csv"))
FedPriv_discard = read.csv(paste0(OutputDir,"/FedPriv_Discards.csv"))
colnames(State)
colnames(StatePriv_discard)
colnames(FedPriv_discard)
=2012-1981
2012-1981
StatePriv_discard = data.frame(YEAR = 1981:2012,matrix(0,31,6))
StatePriv_discard = data.frame(YEAR = 1981:2012,matrix(0,32,6))
StatePriv_discard
StatePriv_discard = read.csv(paste0(OutputDir,"/StatePriv_Discards.csv"))
StatePriv_discard_pre = data.frame(YEAR = 1981:2012,matrix(0,32,6))
StatePriv_discard_pre = data.frame(YEAR = 1981:2012,matrix(0,32,6),colnames = False)
StatePriv_discard_pre = data.frame(YEAR = 1981:2012,matrix(0,32,6),colnames=F)
colnames(StatePriv_discard_pre) = colnames(StatePriv_discard)
StatePriv = bind_rows(StatePriv_discard_pre,StatePriv_discard)
View(StatePriv)
View(FedPriv_discard)
FedPriv_discard = read.csv(paste0(OutputDir,"/FedPriv_Discards.csv"))
FedPriv_discard_post = data.frame(YEAR = 2017:2019,matrix(0,3,6))
FedPriv = bind_rows(FedPriv_discard,FedPriv_discard_post) # produces and extra col thats not needed
View(FedPriv)
FedPriv_discard = read.csv(paste0(OutputDir,"/FedPriv_Discards.csv"))
FedPriv_discard_post = data.frame(YEAR = 2017:2019,matrix(0,3,6))
FedPriv = bind_rows(as.data.frame(FedPriv_discard),FedPriv_discard_post) # produces and extra col thats not needed
View(FedPriv)
StatePriv_discard = read.csv(paste0(OutputDir,"/StatePriv_Discards.csv"))
StatePriv_discard_pre = data.frame(YEAR = 1981:2012,matrix(0,32,6),colnames=F)
colnames(StatePriv_discard_pre) = colnames(StatePriv_discard)
StatePriv = bind_rows(StatePriv_discard_pre,StatePriv_discard) # produces and extra col thats not needed
FedPriv_discard = read.csv(paste0(OutputDir,"/FedPriv_Discards.csv"))
FedPriv_discard_post = data.frame(YEAR = 2017:2019,matrix(0,3,6))
colnames(FedPriv_discard_post) = colnames(FedPriv_discard)
FedPriv = bind_rows(as.data.frame(FedPriv_discard),FedPriv_discard_post)
View(FedPriv)
Priv_discard = NULL
#Open
Priv_discard$Priv_Open_West = FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West
View(Priv_discard)
Priv_discard = as.data.frame(Priv_discard)
View(Priv_discard)
Priv_discard = as.matrix(0,39,6)
#Open
Priv_discard$Priv_Open_West = FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West
#Open
Priv_discard$Priv_Open_West = as.data.frame(FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West)
View(Priv_discard)
colnames(Priv_discard) = c("Priv_Open_West","Priv_Open_Central","Priv_Open_East",
"Priv_Closed_West","Priv_Closed_Central","Priv_Closed_East")
Priv_discard = data.frame(matrix(0,39,6))
colnames(Priv_discard) = c("Priv_Open_West","Priv_Open_Central","Priv_Open_East",
"Priv_Closed_West","Priv_Closed_Central","Priv_Closed_East")
#Open
Priv_discard$Priv_Open_West = FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West
Priv_discard$Priv_Open_Central = FedPriv$FedPriv_Open_Central + StatePriv$StatePriv_Open_Central
Priv_discard$Priv_Open_East = FedPriv$FedPriv_Open_East + StatePriv$StatePriv_Open_East
#Closed
Priv_discard$Priv_Closed_West = FedPriv$FedPriv_Closed_West + StatePriv$StatePriv_Closed_West
Priv_discard$Priv_Closed_Central = FedPriv$FedPriv_Closed_Central + StatePriv$StatePriv_Closed_Central
Priv_discard$Priv_Closed_East = FedPriv$FedPriv_Closed_East + StatePriv$StatePriv_Closed_East
Priv_discard = data.frame(YEAR = 1981:2019,matrix(0,39,6))
colnames(Priv_discard) = c("Priv_Open_West","Priv_Open_Central","Priv_Open_East",
"Priv_Closed_West","Priv_Closed_Central","Priv_Closed_East")
#Open
Priv_discard$Priv_Open_West = FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West
Priv_discard$Priv_Open_Central = FedPriv$FedPriv_Open_Central + StatePriv$StatePriv_Open_Central
Priv_discard$Priv_Open_East = FedPriv$FedPriv_Open_East + StatePriv$StatePriv_Open_East
#Closed
Priv_discard$Priv_Closed_West = FedPriv$FedPriv_Closed_West + StatePriv$StatePriv_Closed_West
Priv_discard$Priv_Closed_Central = FedPriv$FedPriv_Closed_Central + StatePriv$StatePriv_Closed_Central
Priv_discard$Priv_Closed_East = FedPriv$FedPriv_Closed_East + StatePriv$StatePriv_Closed_East
Priv_discard = data.frame(YEAR = 1981:2019,matrix(0,39,6))
colnames(Priv_discard) = c("YEAR","Priv_Open_West","Priv_Open_Central","Priv_Open_East",
"Priv_Closed_West","Priv_Closed_Central","Priv_Closed_East")
#Open
Priv_discard$Priv_Open_West = FedPriv$FedPriv_Open_West + StatePriv$StatePriv_Open_West
Priv_discard$Priv_Open_Central = FedPriv$FedPriv_Open_Central + StatePriv$StatePriv_Open_Central
Priv_discard$Priv_Open_East = FedPriv$FedPriv_Open_East + StatePriv$StatePriv_Open_East
#Closed
Priv_discard$Priv_Closed_West = FedPriv$FedPriv_Closed_West + StatePriv$StatePriv_Closed_West
Priv_discard$Priv_Closed_Central = FedPriv$FedPriv_Closed_Central + StatePriv$StatePriv_Closed_Central
Priv_discard$Priv_Closed_East = FedPriv$FedPriv_Closed_East + StatePriv$StatePriv_Closed_East
write.csv(Priv_discard,paste0(OutputDir,"\\TotalPriv_Discards.csv"),row.names = FALSE)
cat("\nDone producing total (open/closd) Private discards, look in output folder\n")
# No Jurisdiction but TX always open up to 2012 ####
# 3 - Calculate discards for each new fed season (0 - open, 1 - open/closed, 2 - closed) ####
# fed_closed = 1 - open and closed season occurs in a given wave
# Pivot discard data by wave and year to get open and closed season discards
# Should this also be reduced to catches only in federal waters?NO, because everything is federal prior to 2013
RecCatch.fed1 = RecCatch %>% filter(NEW_MODEN==Fish.Mode,new_fed_closed==1)%>%
group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
Regs = read.csv(paste0(InputDir,"\\RSN_FedPrivate_Regs_through2016.csv"))
FileName = "RS_rec_catGEN_8119_20220707"
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
# Getting to the proportion of open season days by wave
P.Open.Days = Regs%>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(p_open = (sum(reg_season =="open")/length(reg_season)))
P.Open.Days$p_closed = 1-P.Open.Days$p_open
colnames(P.Open.Days) = c("YEAR","WAVE","p_open","p_closed")
# 1a - Manipulate GenRec/fed_closed Data to include Texas State waters as Always Open ####
RecCatch = RecCatch %>% mutate(new_fed_closed = ifelse((NEW_STA == "TX"& JURISDICTION=="State"),0,fed_closed)) # 0 = always open
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv")
head(check)
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv")%>%select(fed_closed)
head(check)
check = RecCatch%>%filter(NEW_STA=="LA",NEW_MODEN=="Priv")%>%select(fed_closed)
head(check)
check = RecCatch%>%filter(NEW_STA=="LA",NEW_MODEN=="Priv",YEAR>=2013)%>%select(fed_closed)
head(check)
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv",YEAR>=2013)%>%select(fed_closed)
head(check)
View(check)
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv",YEAR>=2013)%>%select(YEAR,fed_closed,new_fed_closed)
head(check)
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv",YEAR>=2013)%>%select(YEAR,fed_closed,new_fed_closed, JURISDICTION)
head(check)
check = RecCatch%>%filter(NEW_STA=="TX",NEW_MODEN=="Priv",YEAR<=2013)%>%select(YEAR,fed_closed,new_fed_closed, JURISDICTION)
head(check)
View(check)
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# State Jurisdiction 2013-2016
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
FileName = "RS_rec_catGEN_8119_20220707"
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
Regs = read.csv(paste0(InputDir,"/RSN_StatePrivate_Regs_table.csv"))
Regs.help = read.csv(paste0(InputDir,"/RSN_ForHire_Regs_through2021.csv")) # needed for month length doesnt matter
head(Regs)
table(Regs.help$year)
# Getting to the proportion of open season days by wave
StateRegs = Regs %>% select(-Annual_Open)%>% pivot_longer(cols = starts_with("Wave_"), names_to = "WAVE",names_prefix ="Wave_", values_to = "open")%>%
mutate(NEW_STA = ifelse(State=="Texas","TX",
ifelse(State=="Alabama","AL",
ifelse(State=="Mississippi","MS",
ifelse(State == "Louisiana","LA",
ifelse(State=="Florida","FLW",NA))))))
head(StateRegs)
P.Open.Days = Regs.help%>%mutate(wave = ifelse(month %in% c(1,2),1,
ifelse(month %in% c(3,4),2,
ifelse(month %in% c(5,6),3,
ifelse(month %in% c(7,8),4,
ifelse(month %in% c(9,10),5,
ifelse(month %in% c(11,12),6,NA)))))))%>%
group_by(year,wave)%>%
summarize(length = length(reg_season))
head(StateRegs)
colnames(StateRegs) = c("State" ,"year",  "wave" , "open"  ,"NEW_STA")
P.Open.State = merge(StateRegs,P.Open.Days, by = c("year","wave"))
P.Open.State$p_open = P.Open.State$open/P.Open.State$length
head(P.Open.State)
P.Open.State$p_closed = 1-P.Open.State$p_open
colnames(P.Open.State) = c("YEAR","WAVE","State","open","NEW_STA","length","p_open","p_closed")
# 2 - Choose Fishing Mode ###
Fish.Mode ="Priv" # "Cbt"        "Hbt"        "Priv"       "Priv/Shore"
# 3 - Calculate discards for each state season ####
# Pivot discard data by wave and year, using state season now instead
RecCatch.state = RecCatch %>% filter(NEW_MODEN==Fish.Mode,JURISDICTION=="State")%>%
group_by(YEAR,Gulf,NEW_STA,WAVE)%>%summarise(sum(B2))
colnames(RecCatch.state) = c("YEAR","Gulf","NEW_STA","WAVE","B2")
View(RecCatch.state)
# merge based on wave and year to get proportion of season open and closed and discards in one the table
RecCatch.state= merge(RecCatch.state,P.Open.State, by= c("YEAR","WAVE","NEW_STA"))
View(RecCatch.state)
# multiply proportions of season by sum(B2)
RecCatch.state$Open = as.numeric(RecCatch.state$B2)*as.numeric(RecCatch.state$p_open)
RecCatch.state$Closed = as.numeric(RecCatch.state$B2)*as.numeric(RecCatch.state$p_closed)
RecCatch.state.sum.2016 = RecCatch.state %>% filter(between(YEAR,2013,2016))%>%
group_by(YEAR,Gulf)%>%
summarise(Open=sum(Open),
Closed = sum(Closed))
# No jurisdiction 2017-2019
# Pivot discard data by wave and year, using fed season now instead
RecCatch.state.late = RecCatch %>% filter(NEW_MODEN==Fish.Mode)%>%
group_by(YEAR,Gulf,NEW_STA,WAVE)%>%summarise(sum(B2))
source('~/GitHub/OpenClosedRecDiscards/Code/3_FedPrivate_2016_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/5_ComboPrivate_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/3_FedPrivate_2016_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/4_StatePrivate_2013_2019_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/5_ComboPrivate_Discards.R')
source('~/GitHub/OpenClosedRecDiscards/Code/5_ComboPrivate_Discards.R')
# Federal Jurisdiction 2013-2016 ####
# 3 - Calculate discards for each fed season (0 - open, 1 - open/closed, 2 - closed) ####
# fed_closed = 1 - open and closed season occurs in a given wave
# Pivot discard data by wave and year to get open and closed season discards
# Reduced to catches only in federal waters here and use original fed_closed factor.
RecCatch.fed1 = RecCatch %>% filter(NEW_MODEN==Fish.Mode,fed_closed==1, JURISDICTION=="Federal")%>%
group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
colnames(RecCatch.fed1) = c("YEAR","Gulf","WAVE","B2")
# merge based on wave and year to get proportion of season open and closed and discards in one the table
RecCatch.fed1= merge(RecCatch.fed1,P.Open.Days, by= c("YEAR","WAVE"))
library(tidyverse)
library(readxl)
user = Sys.getenv("USERNAME")
# 1 - Determine Season Length based on mode ####
InputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/InputFiles")
ServerDir = "S:/SEDAR 74RT GM RS 2019/Data inputs/Fishery Dependent"
OutputDir = paste0("C:/Users/",user,"/Documents/GitHub/OpenClosedRecDiscards/OutputFiles")
Regs = read.csv(paste0(InputDir,"\\RSN_FedPrivate_Regs_through2016.csv"))
FileName = "RS_rec_catGEN_8119_20220707"
# File Checks: If it exists in the S drive then just load the R data,
# if not change name of RecCatch and do read_excel
if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && file.exists(paste0(InputDir,"/",FileName,".RData"))){
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
cat("\nfile exists on S drive and Github so loading data from github\n")
}else if(file.exists(paste0(ServerDir,"/",FileName,".xlsx")) && !file.exists(paste0(InputDir,"/",FileName,".RData"))){
cat("\nfile does exist, but is not saved on github\n")
RecCatch = read_excel(paste0(ServerDir,"/",FileName,".xlsx"), sheet = "RS_rec_catGEN_8119_20220707") # OLdFile: RS_rec_catGEN_8119_20211123.csv"
save.image(file = paste0(InputDir,"/",FileName,".Rdata"))
}else if(!file.exists(paste0(ServerDir,"/",FileName,".xlsx"))){
cat("\nNeed to find the new file name on the S drive and change the FileName object in this script\n")}
load(paste0(InputDir,"/",FileName,".RData"))
RecCatch = RecCatch
colnames(RecCatch)
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv")group_by(YEAR,Gulf,WAVE)%>%%summarise(sum(B2))
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv")%>%group_by(YEAR,Gulf,WAVE)%>%%summarise(sum(B2))
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv")%>%group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
View(RecCatch.fed0)
View(RecCatch.1)
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv")%>%group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))%>%select(YEAR>=2013)
View(RecCatch.1)
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv",YEAR>=2013)%>%group_by(YEAR,Gulf,WAVE)%>%summarise(sum(B2))
View(RecCatch.1)
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv",YEAR>=2013)%>%group_by(YEAR,Gulf,WAVE,NEW_STA)%>%summarise(sum(B2))
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv",YEAR>=2013,JURISDICTION=="Federal")%>%group_by(YEAR,Gulf,WAVE,NEW_STA)%>%summarise(sum(B2))
RecCatch.1 = RecCatch%>%filter(Gulf=="West",NEW_MODEN=="Priv",YEAR>=2013,JURISDICTION=="Federal")%>%group_by(YEAR,Gulf,WAVE,NEW_STA,fed_closed)%>%summarise(sum(B2))
RecCatch.r = RecCatch%>%filter(NEW_MODEN=="Priv",YEAR>=2013)%>%group_by(YEAR,Gulf)%>%summarise(sum(B2))
View(RecCatch.fed0)
View(RecCatch.fed0)
View(RecCatch)
View(RecCatch.r)
RecCatch.r = RecCatch%>%filter(NEW_MODEN=="Priv",YEAR>=2013)%>%group_by(YEAR,Gulf)%>%summarise(sum(B2))%>%pivot_wider(
names_from = Gulf,
values_from = sum(B2),values_fill = 0)
RecCatch.r = RecCatch%>%filter(NEW_MODEN=="Priv",YEAR>=2013)%>%group_by(YEAR,Gulf)%>%summarise(B2=sum(B2))%>%pivot_wider(
names_from = Gulf,
values_from = B2,values_fill = 0)
RecCatch.r = RecCatch%>%filter(NEW_MODEN=="Priv")%>%group_by(YEAR,Gulf)%>%summarise(B2=sum(B2))%>%pivot_wider(
names_from = Gulf,
values_from = B2,values_fill = 0)
paste0(OutputDir,"/DiscardPivottable.csv")
write.csv(paste0(OutputDir,"/DiscardTotalsfromGenRec.csv"))
write.csv(RecCatch.r,paste0(OutputDir,"/DiscardTotalsfromGenRec.csv"))
